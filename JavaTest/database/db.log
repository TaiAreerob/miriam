/*C3*/SET SCHEMA PUBLIC
CREATE TABLE IF NOT EXISTS AL_CONFIGURATION ( PROPERTY_NAME VARCHAR(255) NOT NULL UNIQUE , PROPERTY_VALUE LONGVARCHAR ) 
CREATE TABLE IF NOT EXISTS AL_GROUPS ( GROUP_NAME VARCHAR(255) NOT NULL PRIMARY KEY , DESCRIPTION LONGVARCHAR ) 
CREATE TABLE IF NOT EXISTS AL_TABLES ( TABLE_NAME VARCHAR(255) NOT NULL PRIMARY KEY , GROUP_NAME VARCHAR(255) , DESCRIPTION LONGVARCHAR ) 
CREATE TABLE IF NOT EXISTS AL_CUSTOM_TYPE ( TABLE_NAME VARCHAR(255) , COLUMN_NAME VARCHAR(255) , TYPE VARCHAR(255) , NAME VARCHAR(255) ) 
CREATE TABLE IF NOT EXISTS AL_VIEWS ( VIEW_NAME VARCHAR(255) NOT NULL UNIQUE , VIEW_DEFINITION LONGVARCHAR , IS_VALID BOOLEAN ) 
CREATE TABLE IF NOT EXISTS AL_SELECTED_LOG_OBJECTS ( NAME VARCHAR(255) NOT NULL UNIQUE , TYPE VARCHAR(255) ) 
CREATE TABLE IF NOT EXISTS AL_DB_OBJECTS ( NAME VARCHAR(255) NOT NULL UNIQUE , TYPE VARCHAR(255) , USAGE VARCHAR(255) ) 
/*C4*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'javatest.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'com.anylogic.libraries.processmodeling.Source')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<Source>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'com.anylogic.libraries.processmodeling.Queue')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'?<Queue>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'com.anylogic.libraries.processmodeling.Delay')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(17,3,'?<Delay>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(4,'com.anylogic.libraries.processmodeling.Sink')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'?<Sink>','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.source','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalType','RATE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rate','0.1')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rateSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'modifyRate','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'setAgentParametersFromDB','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'databaseTable','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'multipleEntitiesPerArrival','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'limitArrivals','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'maxArrivals','1000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'enableCustomStartTime','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'startTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'pushProtocol','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'discardHangingEntities','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=6
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'root.queue','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'capacity','15')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'maximumCapacity','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'entityLocation','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'queuing','QUEUING_FIFO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'enableTimeout','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'enablePreemption','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'restoreEntityLocationOnExit','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'forceStatisticsCollection','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=17
INSERT INTO AGENTS_RAW_LOG VALUES(17,3,'root.ATM','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'type','TIMEOUT')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'capacity','1')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'maximumCapacity','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'entityLocation','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'pushProtocol','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'restoreEntityLocationOnExit','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'forceStatisticsCollection','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=23
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'root.sink','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(5,'com.anylogic.libraries.processmodeling.PMLSettings')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(25,5,'?<PMLSettings>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(6,'com.anylogic.libraries.processmodeling.Enter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(28,6,'?<Enter>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(7,'com.anylogic.libraries.processmodeling.MoveTo')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(32,7,'?<MoveTo>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(8,'com.anylogic.libraries.processmodeling.SelectOutput')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(39,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(9,'com.anylogic.libraries.processmodeling.ResourceTaskEnd')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(45,9,'?<ResourceTaskEnd>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(61,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(69,6,'?<Enter>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(73,7,'?<MoveTo>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(80,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(86,9,'?<ResourceTaskEnd>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(102,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=25
INSERT INTO AGENTS_RAW_LOG VALUES(25,5,'root.?<PMLSettings>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(25,'offsetForAttachedUnits','10.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(25,'animationLocationInitialCapacity','100')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(25,'enableStatsByDefault','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=28
INSERT INTO AGENTS_RAW_LOG VALUES(28,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitWrapUpEnter','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=32
INSERT INTO AGENTS_RAW_LOG VALUES(32,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.moveToHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=39
INSERT INTO AGENTS_RAW_LOG VALUES(39,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.goHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(39,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=45
INSERT INTO AGENTS_RAW_LOG VALUES(45,9,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.resourceEnd','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=61
INSERT INTO AGENTS_RAW_LOG VALUES(61,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitOut','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(61,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=69
INSERT INTO AGENTS_RAW_LOG VALUES(69,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitWrapUpEnter','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=73
INSERT INTO AGENTS_RAW_LOG VALUES(73,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.moveToHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=80
INSERT INTO AGENTS_RAW_LOG VALUES(80,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.goHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(80,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=86
INSERT INTO AGENTS_RAW_LOG VALUES(86,9,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.resourceEnd','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=102
INSERT INTO AGENTS_RAW_LOG VALUES(102,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitOut','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(102,'conditionIsProbabilistic','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(10,'com.anylogic.engine.Agent')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(109,10,'<Default Population>[0]','2016-07-14 00:00:03.135000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=109
INSERT INTO AGENTS_RAW_LOG VALUES(109,10,'root.<Default Population>[0]','2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(0,109,1,'2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(1,109,6,'2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(2,109,17,'2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(109,17,'WORK','2016-07-14 00:00:03.135000','2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(3,109,23,'2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(4,109,NULL,'2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(109,'2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO STATISTICS_RAW_LOG VALUES(6,'statsSize',0.0E0,0.0E0,0.0E0,1.0E0,0.0E0,3)
COMMIT
INSERT INTO STATISTICS_RAW_LOG VALUES(17,'statsUtilization',0.2009125194917959E0,0.4006827660422328E0,0.0E0,1.0E0,0.3964872815579397E0,3)
COMMIT
DISCONNECT
/*C5*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'javatest.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'com.anylogic.libraries.processmodeling.Source')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<Source>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'com.anylogic.libraries.processmodeling.Queue')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'?<Queue>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'com.anylogic.libraries.processmodeling.Delay')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(17,3,'?<Delay>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(4,'com.anylogic.libraries.processmodeling.Sink')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'?<Sink>','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.source','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalType','RATE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rate','0.1')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rateSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'modifyRate','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'setAgentParametersFromDB','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'databaseTable','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'multipleEntitiesPerArrival','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'limitArrivals','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'maxArrivals','1000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'enableCustomStartTime','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'startTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'pushProtocol','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'discardHangingEntities','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=6
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'root.queue','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'capacity','15')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'maximumCapacity','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'entityLocation','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'queuing','QUEUING_FIFO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'enableTimeout','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'enablePreemption','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'restoreEntityLocationOnExit','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'forceStatisticsCollection','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=17
INSERT INTO AGENTS_RAW_LOG VALUES(17,3,'root.ATM','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'type','TIMEOUT')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'capacity','1')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'maximumCapacity','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'entityLocation','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'pushProtocol','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'restoreEntityLocationOnExit','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'forceStatisticsCollection','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=23
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'root.sink','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(5,'com.anylogic.libraries.processmodeling.PMLSettings')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(25,5,'?<PMLSettings>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(6,'com.anylogic.libraries.processmodeling.Enter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(28,6,'?<Enter>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(7,'com.anylogic.libraries.processmodeling.MoveTo')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(32,7,'?<MoveTo>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(8,'com.anylogic.libraries.processmodeling.SelectOutput')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(39,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(9,'com.anylogic.libraries.processmodeling.ResourceTaskEnd')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(45,9,'?<ResourceTaskEnd>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(61,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(69,6,'?<Enter>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(73,7,'?<MoveTo>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(80,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(86,9,'?<ResourceTaskEnd>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(102,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=25
INSERT INTO AGENTS_RAW_LOG VALUES(25,5,'root.?<PMLSettings>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(25,'offsetForAttachedUnits','10.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(25,'animationLocationInitialCapacity','100')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(25,'enableStatsByDefault','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=28
INSERT INTO AGENTS_RAW_LOG VALUES(28,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitWrapUpEnter','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=32
INSERT INTO AGENTS_RAW_LOG VALUES(32,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.moveToHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=39
INSERT INTO AGENTS_RAW_LOG VALUES(39,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.goHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(39,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=45
INSERT INTO AGENTS_RAW_LOG VALUES(45,9,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.resourceEnd','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=61
INSERT INTO AGENTS_RAW_LOG VALUES(61,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitOut','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(61,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=69
INSERT INTO AGENTS_RAW_LOG VALUES(69,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitWrapUpEnter','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=73
INSERT INTO AGENTS_RAW_LOG VALUES(73,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.moveToHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=80
INSERT INTO AGENTS_RAW_LOG VALUES(80,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.goHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(80,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=86
INSERT INTO AGENTS_RAW_LOG VALUES(86,9,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.resourceEnd','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=102
INSERT INTO AGENTS_RAW_LOG VALUES(102,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitOut','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(102,'conditionIsProbabilistic','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(10,'com.anylogic.engine.Agent')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(109,10,'<Default Population>[0]','2016-07-14 00:00:03.135000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=109
INSERT INTO AGENTS_RAW_LOG VALUES(109,10,'root.<Default Population>[0]','2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(0,109,1,'2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(1,109,6,'2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(2,109,17,'2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(109,17,'WORK','2016-07-14 00:00:03.135000','2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(3,109,23,'2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(4,109,NULL,'2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(109,'2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(110,10,'<Default Population>[0]','2016-07-14 00:00:12.049000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=110
INSERT INTO AGENTS_RAW_LOG VALUES(110,10,'root.<Default Population>[0]','2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(5,110,1,'2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(6,110,6,'2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(7,110,17,'2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(110,17,'WORK','2016-07-14 00:00:12.049000','2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(8,110,23,'2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(9,110,NULL,'2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(110,'2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(111,10,'<Default Population>[0]','2016-07-14 00:00:23.053000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=111
INSERT INTO AGENTS_RAW_LOG VALUES(111,10,'root.<Default Population>[0]','2016-07-14 00:00:23.053000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(10,111,1,'2016-07-14 00:00:23.053000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(11,111,6,'2016-07-14 00:00:23.053000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(12,111,17,'2016-07-14 00:00:23.053000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(111,17,'WORK','2016-07-14 00:00:23.053000','2016-07-14 00:00:24.260000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(13,111,23,'2016-07-14 00:00:24.260000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(14,111,NULL,'2016-07-14 00:00:24.260000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(111,'2016-07-14 00:00:24.260000')
COMMIT
DISCONNECT
/*C6*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'javatest.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'com.anylogic.libraries.processmodeling.Source')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<Source>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'com.anylogic.libraries.processmodeling.Queue')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'?<Queue>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'com.anylogic.libraries.processmodeling.Delay')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(17,3,'?<Delay>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(4,'com.anylogic.libraries.processmodeling.Sink')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'?<Sink>','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.source','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalType','RATE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rate','0.1')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rateSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'modifyRate','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'setAgentParametersFromDB','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'databaseTable','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'multipleEntitiesPerArrival','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'limitArrivals','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'maxArrivals','1000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'enableCustomStartTime','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'startTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'pushProtocol','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'discardHangingEntities','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=6
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'root.queue','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'capacity','15')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'maximumCapacity','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'entityLocation','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'queuing','QUEUING_FIFO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'enableTimeout','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'enablePreemption','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'restoreEntityLocationOnExit','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'forceStatisticsCollection','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=17
INSERT INTO AGENTS_RAW_LOG VALUES(17,3,'root.ATM','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'type','TIMEOUT')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'capacity','1')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'maximumCapacity','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'entityLocation','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'pushProtocol','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'restoreEntityLocationOnExit','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'forceStatisticsCollection','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=23
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'root.sink','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(5,'com.anylogic.libraries.processmodeling.PMLSettings')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(25,5,'?<PMLSettings>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(6,'com.anylogic.libraries.processmodeling.Enter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(28,6,'?<Enter>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(7,'com.anylogic.libraries.processmodeling.MoveTo')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(32,7,'?<MoveTo>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(8,'com.anylogic.libraries.processmodeling.SelectOutput')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(39,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(9,'com.anylogic.libraries.processmodeling.ResourceTaskEnd')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(45,9,'?<ResourceTaskEnd>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(61,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(69,6,'?<Enter>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(73,7,'?<MoveTo>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(80,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(86,9,'?<ResourceTaskEnd>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(102,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=25
INSERT INTO AGENTS_RAW_LOG VALUES(25,5,'root.?<PMLSettings>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(25,'offsetForAttachedUnits','10.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(25,'animationLocationInitialCapacity','100')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(25,'enableStatsByDefault','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=28
INSERT INTO AGENTS_RAW_LOG VALUES(28,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitWrapUpEnter','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=32
INSERT INTO AGENTS_RAW_LOG VALUES(32,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.moveToHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=39
INSERT INTO AGENTS_RAW_LOG VALUES(39,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.goHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(39,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=45
INSERT INTO AGENTS_RAW_LOG VALUES(45,9,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.resourceEnd','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=61
INSERT INTO AGENTS_RAW_LOG VALUES(61,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitOut','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(61,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=69
INSERT INTO AGENTS_RAW_LOG VALUES(69,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitWrapUpEnter','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=73
INSERT INTO AGENTS_RAW_LOG VALUES(73,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.moveToHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=80
INSERT INTO AGENTS_RAW_LOG VALUES(80,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.goHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(80,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=86
INSERT INTO AGENTS_RAW_LOG VALUES(86,9,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.resourceEnd','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=102
INSERT INTO AGENTS_RAW_LOG VALUES(102,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitOut','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(102,'conditionIsProbabilistic','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(10,'com.anylogic.engine.Agent')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(109,10,'<Default Population>[0]','2016-07-14 00:00:03.135000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=109
INSERT INTO AGENTS_RAW_LOG VALUES(109,10,'root.<Default Population>[0]','2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(0,109,1,'2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(1,109,6,'2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(2,109,17,'2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(109,17,'WORK','2016-07-14 00:00:03.135000','2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(3,109,23,'2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(4,109,NULL,'2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(109,'2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(110,10,'<Default Population>[0]','2016-07-14 00:00:12.049000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=110
INSERT INTO AGENTS_RAW_LOG VALUES(110,10,'root.<Default Population>[0]','2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(5,110,1,'2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(6,110,6,'2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(7,110,17,'2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(110,17,'WORK','2016-07-14 00:00:12.049000','2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(8,110,23,'2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(9,110,NULL,'2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(110,'2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO STATISTICS_RAW_LOG VALUES(6,'statsSize',0.0E0,0.0E0,0.0E0,1.0E0,0.0E0,5)
COMMIT
INSERT INTO STATISTICS_RAW_LOG VALUES(17,'statsUtilization',0.1508376534612839E0,0.35789056394319413E0,0.0E0,1.0E0,0.19262653890327608E0,5)
COMMIT
DISCONNECT
/*C7*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'javatest.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'com.anylogic.libraries.processmodeling.Source')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<Source>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'com.anylogic.libraries.processmodeling.Queue')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'?<Queue>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'com.anylogic.libraries.processmodeling.Delay')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(17,3,'?<Delay>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(4,'com.anylogic.libraries.processmodeling.Sink')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'?<Sink>','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.source','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalType','RATE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rate','0.1')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rateSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'modifyRate','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'setAgentParametersFromDB','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'databaseTable','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'multipleEntitiesPerArrival','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'limitArrivals','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'maxArrivals','1000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'enableCustomStartTime','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'startTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'pushProtocol','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'discardHangingEntities','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=6
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'root.queue','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'capacity','15')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'maximumCapacity','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'entityLocation','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'queuing','QUEUING_FIFO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'enableTimeout','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'enablePreemption','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'restoreEntityLocationOnExit','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'forceStatisticsCollection','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=17
INSERT INTO AGENTS_RAW_LOG VALUES(17,3,'root.ATM','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'type','TIMEOUT')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'capacity','1')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'maximumCapacity','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'entityLocation','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'pushProtocol','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'restoreEntityLocationOnExit','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'forceStatisticsCollection','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=23
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'root.sink','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(5,'com.anylogic.libraries.processmodeling.PMLSettings')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(25,5,'?<PMLSettings>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(6,'com.anylogic.libraries.processmodeling.Enter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(28,6,'?<Enter>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(7,'com.anylogic.libraries.processmodeling.MoveTo')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(32,7,'?<MoveTo>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(8,'com.anylogic.libraries.processmodeling.SelectOutput')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(39,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(9,'com.anylogic.libraries.processmodeling.ResourceTaskEnd')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(45,9,'?<ResourceTaskEnd>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(61,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(69,6,'?<Enter>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(73,7,'?<MoveTo>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(80,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(86,9,'?<ResourceTaskEnd>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(102,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=25
INSERT INTO AGENTS_RAW_LOG VALUES(25,5,'root.?<PMLSettings>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(25,'offsetForAttachedUnits','10.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(25,'animationLocationInitialCapacity','100')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(25,'enableStatsByDefault','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=28
INSERT INTO AGENTS_RAW_LOG VALUES(28,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitWrapUpEnter','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=32
INSERT INTO AGENTS_RAW_LOG VALUES(32,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.moveToHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=39
INSERT INTO AGENTS_RAW_LOG VALUES(39,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.goHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(39,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=45
INSERT INTO AGENTS_RAW_LOG VALUES(45,9,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.resourceEnd','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=61
INSERT INTO AGENTS_RAW_LOG VALUES(61,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitOut','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(61,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=69
INSERT INTO AGENTS_RAW_LOG VALUES(69,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitWrapUpEnter','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=73
INSERT INTO AGENTS_RAW_LOG VALUES(73,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.moveToHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=80
INSERT INTO AGENTS_RAW_LOG VALUES(80,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.goHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(80,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=86
INSERT INTO AGENTS_RAW_LOG VALUES(86,9,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.resourceEnd','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=102
INSERT INTO AGENTS_RAW_LOG VALUES(102,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitOut','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(102,'conditionIsProbabilistic','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(10,'com.anylogic.engine.Agent')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(109,10,'<Default Population>[0]','2016-07-14 00:00:03.135000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=109
INSERT INTO AGENTS_RAW_LOG VALUES(109,10,'root.<Default Population>[0]','2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(0,109,1,'2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(1,109,6,'2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(2,109,17,'2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(109,17,'WORK','2016-07-14 00:00:03.135000','2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(3,109,23,'2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(4,109,NULL,'2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(109,'2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(110,10,'<Default Population>[0]','2016-07-14 00:00:12.049000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=110
INSERT INTO AGENTS_RAW_LOG VALUES(110,10,'root.<Default Population>[0]','2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(5,110,1,'2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(6,110,6,'2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(7,110,17,'2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(110,17,'WORK','2016-07-14 00:00:12.049000','2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(8,110,23,'2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(9,110,NULL,'2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(110,'2016-07-14 00:00:13.261000')
COMMIT
DISCONNECT
/*C8*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'javatest.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'com.anylogic.libraries.processmodeling.Source')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<Source>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'com.anylogic.libraries.processmodeling.Queue')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'?<Queue>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'com.anylogic.libraries.processmodeling.Delay')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(17,3,'?<Delay>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(4,'com.anylogic.libraries.processmodeling.Sink')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'?<Sink>','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.source','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalType','RATE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rate','0.1')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rateSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'modifyRate','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'setAgentParametersFromDB','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'databaseTable','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'multipleEntitiesPerArrival','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'limitArrivals','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'maxArrivals','1000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'enableCustomStartTime','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'startTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'pushProtocol','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'discardHangingEntities','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=6
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'root.queue','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'capacity','15')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'maximumCapacity','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'entityLocation','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'queuing','QUEUING_FIFO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'enableTimeout','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'enablePreemption','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'restoreEntityLocationOnExit','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'forceStatisticsCollection','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=17
INSERT INTO AGENTS_RAW_LOG VALUES(17,3,'root.ATM','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'type','TIMEOUT')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'capacity','1')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'maximumCapacity','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'entityLocation','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'pushProtocol','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'restoreEntityLocationOnExit','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'forceStatisticsCollection','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=23
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'root.sink','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(5,'com.anylogic.libraries.processmodeling.PMLSettings')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(25,5,'?<PMLSettings>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(6,'com.anylogic.libraries.processmodeling.Enter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(28,6,'?<Enter>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(7,'com.anylogic.libraries.processmodeling.MoveTo')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(32,7,'?<MoveTo>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(8,'com.anylogic.libraries.processmodeling.SelectOutput')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(39,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(9,'com.anylogic.libraries.processmodeling.ResourceTaskEnd')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(45,9,'?<ResourceTaskEnd>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(61,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(69,6,'?<Enter>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(73,7,'?<MoveTo>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(80,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(86,9,'?<ResourceTaskEnd>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(102,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=25
INSERT INTO AGENTS_RAW_LOG VALUES(25,5,'root.?<PMLSettings>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(25,'offsetForAttachedUnits','10.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(25,'animationLocationInitialCapacity','100')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(25,'enableStatsByDefault','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=28
INSERT INTO AGENTS_RAW_LOG VALUES(28,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitWrapUpEnter','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=32
INSERT INTO AGENTS_RAW_LOG VALUES(32,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.moveToHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=39
INSERT INTO AGENTS_RAW_LOG VALUES(39,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.goHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(39,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=45
INSERT INTO AGENTS_RAW_LOG VALUES(45,9,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.resourceEnd','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=61
INSERT INTO AGENTS_RAW_LOG VALUES(61,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitOut','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(61,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=69
INSERT INTO AGENTS_RAW_LOG VALUES(69,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitWrapUpEnter','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=73
INSERT INTO AGENTS_RAW_LOG VALUES(73,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.moveToHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=80
INSERT INTO AGENTS_RAW_LOG VALUES(80,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.goHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(80,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=86
INSERT INTO AGENTS_RAW_LOG VALUES(86,9,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.resourceEnd','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=102
INSERT INTO AGENTS_RAW_LOG VALUES(102,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitOut','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(102,'conditionIsProbabilistic','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(10,'com.anylogic.engine.Agent')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(109,10,'<Default Population>[0]','2016-07-14 00:00:03.135000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=109
INSERT INTO AGENTS_RAW_LOG VALUES(109,10,'root.<Default Population>[0]','2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(0,109,1,'2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(1,109,6,'2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(2,109,17,'2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(109,17,'WORK','2016-07-14 00:00:03.135000','2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(3,109,23,'2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(4,109,NULL,'2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(109,'2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(110,10,'<Default Population>[0]','2016-07-14 00:00:12.049000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=110
INSERT INTO AGENTS_RAW_LOG VALUES(110,10,'root.<Default Population>[0]','2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(5,110,1,'2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(6,110,6,'2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(7,110,17,'2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(110,17,'WORK','2016-07-14 00:00:12.049000','2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(8,110,23,'2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(9,110,NULL,'2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(110,'2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(111,10,'<Default Population>[0]','2016-07-14 00:00:23.053000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=111
INSERT INTO AGENTS_RAW_LOG VALUES(111,10,'root.<Default Population>[0]','2016-07-14 00:00:23.053000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(10,111,1,'2016-07-14 00:00:23.053000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(11,111,6,'2016-07-14 00:00:23.053000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(12,111,17,'2016-07-14 00:00:23.053000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(111,17,'WORK','2016-07-14 00:00:23.053000','2016-07-14 00:00:24.260000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(13,111,23,'2016-07-14 00:00:24.260000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(14,111,NULL,'2016-07-14 00:00:24.260000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(111,'2016-07-14 00:00:24.260000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(112,10,'<Default Population>[0]','2016-07-14 00:01:14.020000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=112
INSERT INTO AGENTS_RAW_LOG VALUES(112,10,'root.<Default Population>[0]','2016-07-14 00:01:14.020000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(15,112,1,'2016-07-14 00:01:14.020000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(16,112,6,'2016-07-14 00:01:14.020000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(17,112,17,'2016-07-14 00:01:14.020000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(113,10,'<Default Population>[1]','2016-07-14 00:01:14.640000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=113
INSERT INTO AGENTS_RAW_LOG VALUES(113,10,'root.<Default Population>[1]','2016-07-14 00:01:14.640000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(18,113,1,'2016-07-14 00:01:14.640000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(19,113,6,'2016-07-14 00:01:14.640000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(112,17,'WORK','2016-07-14 00:01:14.020000','2016-07-14 00:01:15.207000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(113,6,'WAIT','2016-07-14 00:01:14.640000','2016-07-14 00:01:15.207000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(20,113,17,'2016-07-14 00:01:15.207000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(21,112,23,'2016-07-14 00:01:15.207000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(22,112,NULL,'2016-07-14 00:01:15.207000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(112,'2016-07-14 00:01:15.207000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(114,10,'<Default Population>[1]','2016-07-14 00:01:15.290000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=114
INSERT INTO AGENTS_RAW_LOG VALUES(114,10,'root.<Default Population>[1]','2016-07-14 00:01:15.290000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(23,114,1,'2016-07-14 00:01:15.290000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(24,114,6,'2016-07-14 00:01:15.290000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(113,17,'WORK','2016-07-14 00:01:15.207000','2016-07-14 00:01:16.106000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(114,6,'WAIT','2016-07-14 00:01:15.290000','2016-07-14 00:01:16.106000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(25,114,17,'2016-07-14 00:01:16.106000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(26,113,23,'2016-07-14 00:01:16.106000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(27,113,NULL,'2016-07-14 00:01:16.106000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(113,'2016-07-14 00:01:16.106000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(114,17,'WORK','2016-07-14 00:01:16.106000','2016-07-14 00:01:16.949000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(28,114,23,'2016-07-14 00:01:16.949000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(29,114,NULL,'2016-07-14 00:01:16.949000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(114,'2016-07-14 00:01:16.949000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(115,10,'<Default Population>[0]','2016-07-14 00:01:25.859000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=115
INSERT INTO AGENTS_RAW_LOG VALUES(115,10,'root.<Default Population>[0]','2016-07-14 00:01:25.859000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(30,115,1,'2016-07-14 00:01:25.859000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(31,115,6,'2016-07-14 00:01:25.859000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(32,115,17,'2016-07-14 00:01:25.859000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(115,17,'WORK','2016-07-14 00:01:25.859000','2016-07-14 00:01:26.575000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(33,115,23,'2016-07-14 00:01:26.575000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(34,115,NULL,'2016-07-14 00:01:26.575000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(115,'2016-07-14 00:01:26.575000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(116,10,'<Default Population>[0]','2016-07-14 00:01:32.662000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=116
INSERT INTO AGENTS_RAW_LOG VALUES(116,10,'root.<Default Population>[0]','2016-07-14 00:01:32.662000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(35,116,1,'2016-07-14 00:01:32.662000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(36,116,6,'2016-07-14 00:01:32.662000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(37,116,17,'2016-07-14 00:01:32.662000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(116,17,'WORK','2016-07-14 00:01:32.662000','2016-07-14 00:01:33.676000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(38,116,23,'2016-07-14 00:01:33.676000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(39,116,NULL,'2016-07-14 00:01:33.676000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(116,'2016-07-14 00:01:33.676000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(117,10,'<Default Population>[0]','2016-07-14 00:01:35.269000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=117
INSERT INTO AGENTS_RAW_LOG VALUES(117,10,'root.<Default Population>[0]','2016-07-14 00:01:35.269000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(40,117,1,'2016-07-14 00:01:35.269000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(41,117,6,'2016-07-14 00:01:35.269000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(42,117,17,'2016-07-14 00:01:35.269000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(117,17,'WORK','2016-07-14 00:01:35.269000','2016-07-14 00:01:36.157000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(43,117,23,'2016-07-14 00:01:36.157000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(44,117,NULL,'2016-07-14 00:01:36.157000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(117,'2016-07-14 00:01:36.157000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(118,10,'<Default Population>[0]','2016-07-14 00:01:53.800000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=118
INSERT INTO AGENTS_RAW_LOG VALUES(118,10,'root.<Default Population>[0]','2016-07-14 00:01:53.800000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(45,118,1,'2016-07-14 00:01:53.800000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(46,118,6,'2016-07-14 00:01:53.800000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(47,118,17,'2016-07-14 00:01:53.800000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(118,17,'WORK','2016-07-14 00:01:53.800000','2016-07-14 00:01:54.829000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(48,118,23,'2016-07-14 00:01:54.829000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(49,118,NULL,'2016-07-14 00:01:54.829000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(118,'2016-07-14 00:01:54.829000')
COMMIT
INSERT INTO STATISTICS_RAW_LOG VALUES(6,'statsSize',0.012154793051707954E0,0.10957670399121387E0,0.0E0,1.0E0,0.02013273302640247E0,21)
COMMIT
INSERT INTO STATISTICS_RAW_LOG VALUES(17,'statsUtilization',0.085204128293979E0,0.2791852159689731E0,0.0E0,1.0E0,0.05106477987176466E0,21)
COMMIT
DISCONNECT
/*C9*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'javatest.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'com.anylogic.libraries.processmodeling.Source')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<Source>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'com.anylogic.libraries.processmodeling.Queue')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'?<Queue>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'com.anylogic.libraries.processmodeling.Delay')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(17,3,'?<Delay>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(4,'com.anylogic.libraries.processmodeling.Sink')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'?<Sink>','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.source','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalType','RATE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rate','0.1')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rateSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'modifyRate','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'setAgentParametersFromDB','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'databaseTable','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'multipleEntitiesPerArrival','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'limitArrivals','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'maxArrivals','1000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'enableCustomStartTime','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'startTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'pushProtocol','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'discardHangingEntities','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=6
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'root.queue','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'capacity','15')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'maximumCapacity','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'entityLocation','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'queuing','QUEUING_FIFO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'enableTimeout','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'enablePreemption','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'restoreEntityLocationOnExit','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'forceStatisticsCollection','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=17
INSERT INTO AGENTS_RAW_LOG VALUES(17,3,'root.ATM','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'type','TIMEOUT')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'capacity','1')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'maximumCapacity','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'entityLocation','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'pushProtocol','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'restoreEntityLocationOnExit','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'forceStatisticsCollection','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=23
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'root.sink','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(5,'com.anylogic.libraries.processmodeling.PMLSettings')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(25,5,'?<PMLSettings>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(6,'com.anylogic.libraries.processmodeling.Enter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(28,6,'?<Enter>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(7,'com.anylogic.libraries.processmodeling.MoveTo')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(32,7,'?<MoveTo>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(8,'com.anylogic.libraries.processmodeling.SelectOutput')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(39,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(9,'com.anylogic.libraries.processmodeling.ResourceTaskEnd')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(45,9,'?<ResourceTaskEnd>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(61,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(69,6,'?<Enter>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(73,7,'?<MoveTo>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(80,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(86,9,'?<ResourceTaskEnd>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(102,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=25
INSERT INTO AGENTS_RAW_LOG VALUES(25,5,'root.?<PMLSettings>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(25,'offsetForAttachedUnits','10.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(25,'animationLocationInitialCapacity','100')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(25,'enableStatsByDefault','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=28
INSERT INTO AGENTS_RAW_LOG VALUES(28,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitWrapUpEnter','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=32
INSERT INTO AGENTS_RAW_LOG VALUES(32,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.moveToHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=39
INSERT INTO AGENTS_RAW_LOG VALUES(39,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.goHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(39,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=45
INSERT INTO AGENTS_RAW_LOG VALUES(45,9,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.resourceEnd','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=61
INSERT INTO AGENTS_RAW_LOG VALUES(61,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitOut','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(61,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=69
INSERT INTO AGENTS_RAW_LOG VALUES(69,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitWrapUpEnter','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=73
INSERT INTO AGENTS_RAW_LOG VALUES(73,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.moveToHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=80
INSERT INTO AGENTS_RAW_LOG VALUES(80,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.goHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(80,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=86
INSERT INTO AGENTS_RAW_LOG VALUES(86,9,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.resourceEnd','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=102
INSERT INTO AGENTS_RAW_LOG VALUES(102,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitOut','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(102,'conditionIsProbabilistic','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(10,'com.anylogic.engine.Agent')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(109,10,'<Default Population>[0]','2016-07-14 00:00:03.135000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=109
INSERT INTO AGENTS_RAW_LOG VALUES(109,10,'root.<Default Population>[0]','2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(0,109,1,'2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(1,109,6,'2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(2,109,17,'2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(109,17,'WORK','2016-07-14 00:00:03.135000','2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(3,109,23,'2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(4,109,NULL,'2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(109,'2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(110,10,'<Default Population>[0]','2016-07-14 00:00:12.049000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=110
INSERT INTO AGENTS_RAW_LOG VALUES(110,10,'root.<Default Population>[0]','2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(5,110,1,'2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(6,110,6,'2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(7,110,17,'2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(110,17,'WORK','2016-07-14 00:00:12.049000','2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(8,110,23,'2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(9,110,NULL,'2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(110,'2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(111,10,'<Default Population>[0]','2016-07-14 00:00:23.053000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=111
INSERT INTO AGENTS_RAW_LOG VALUES(111,10,'root.<Default Population>[0]','2016-07-14 00:00:23.053000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(10,111,1,'2016-07-14 00:00:23.053000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(11,111,6,'2016-07-14 00:00:23.053000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(12,111,17,'2016-07-14 00:00:23.053000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(111,17,'WORK','2016-07-14 00:00:23.053000','2016-07-14 00:00:24.260000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(13,111,23,'2016-07-14 00:00:24.260000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(14,111,NULL,'2016-07-14 00:00:24.260000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(111,'2016-07-14 00:00:24.260000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(112,10,'<Default Population>[0]','2016-07-14 00:01:14.020000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=112
INSERT INTO AGENTS_RAW_LOG VALUES(112,10,'root.<Default Population>[0]','2016-07-14 00:01:14.020000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(15,112,1,'2016-07-14 00:01:14.020000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(16,112,6,'2016-07-14 00:01:14.020000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(17,112,17,'2016-07-14 00:01:14.020000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(113,10,'<Default Population>[1]','2016-07-14 00:01:14.640000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=113
INSERT INTO AGENTS_RAW_LOG VALUES(113,10,'root.<Default Population>[1]','2016-07-14 00:01:14.640000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(18,113,1,'2016-07-14 00:01:14.640000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(19,113,6,'2016-07-14 00:01:14.640000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(112,17,'WORK','2016-07-14 00:01:14.020000','2016-07-14 00:01:15.207000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(113,6,'WAIT','2016-07-14 00:01:14.640000','2016-07-14 00:01:15.207000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(20,113,17,'2016-07-14 00:01:15.207000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(21,112,23,'2016-07-14 00:01:15.207000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(22,112,NULL,'2016-07-14 00:01:15.207000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(112,'2016-07-14 00:01:15.207000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(114,10,'<Default Population>[1]','2016-07-14 00:01:15.290000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=114
INSERT INTO AGENTS_RAW_LOG VALUES(114,10,'root.<Default Population>[1]','2016-07-14 00:01:15.290000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(23,114,1,'2016-07-14 00:01:15.290000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(24,114,6,'2016-07-14 00:01:15.290000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(113,17,'WORK','2016-07-14 00:01:15.207000','2016-07-14 00:01:16.106000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(114,6,'WAIT','2016-07-14 00:01:15.290000','2016-07-14 00:01:16.106000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(25,114,17,'2016-07-14 00:01:16.106000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(26,113,23,'2016-07-14 00:01:16.106000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(27,113,NULL,'2016-07-14 00:01:16.106000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(113,'2016-07-14 00:01:16.106000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(114,17,'WORK','2016-07-14 00:01:16.106000','2016-07-14 00:01:16.949000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(28,114,23,'2016-07-14 00:01:16.949000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(29,114,NULL,'2016-07-14 00:01:16.949000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(114,'2016-07-14 00:01:16.949000')
COMMIT
DISCONNECT
/*C10*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'javatest.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'com.anylogic.libraries.processmodeling.Source')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<Source>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'com.anylogic.libraries.processmodeling.Queue')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'?<Queue>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'com.anylogic.libraries.processmodeling.Delay')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(17,3,'?<Delay>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(4,'com.anylogic.libraries.processmodeling.Sink')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'?<Sink>','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.source','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalType','RATE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rate','0.1')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rateSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'modifyRate','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'setAgentParametersFromDB','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'databaseTable','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'multipleEntitiesPerArrival','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'limitArrivals','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'maxArrivals','1000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'enableCustomStartTime','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'startTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'pushProtocol','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'discardHangingEntities','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=6
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'root.queue','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'capacity','15')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'maximumCapacity','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'entityLocation','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'queuing','QUEUING_FIFO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'enableTimeout','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'enablePreemption','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'restoreEntityLocationOnExit','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(6,'forceStatisticsCollection','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=17
INSERT INTO AGENTS_RAW_LOG VALUES(17,3,'root.ATM','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'type','TIMEOUT')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'capacity','1')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'maximumCapacity','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'entityLocation','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'pushProtocol','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'restoreEntityLocationOnExit','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(17,'forceStatisticsCollection','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=23
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'root.sink','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(5,'com.anylogic.libraries.processmodeling.PMLSettings')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(25,5,'?<PMLSettings>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(6,'com.anylogic.libraries.processmodeling.Enter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(28,6,'?<Enter>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(7,'com.anylogic.libraries.processmodeling.MoveTo')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(32,7,'?<MoveTo>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(8,'com.anylogic.libraries.processmodeling.SelectOutput')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(39,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(9,'com.anylogic.libraries.processmodeling.ResourceTaskEnd')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(45,9,'?<ResourceTaskEnd>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(61,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(69,6,'?<Enter>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(73,7,'?<MoveTo>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(80,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(86,9,'?<ResourceTaskEnd>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(102,8,'?<SelectOutput>','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=25
INSERT INTO AGENTS_RAW_LOG VALUES(25,5,'root.?<PMLSettings>','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(25,'offsetForAttachedUnits','10.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(25,'animationLocationInitialCapacity','100')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(25,'enableStatsByDefault','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=28
INSERT INTO AGENTS_RAW_LOG VALUES(28,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitWrapUpEnter','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(28,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=32
INSERT INTO AGENTS_RAW_LOG VALUES(32,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.moveToHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(32,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=39
INSERT INTO AGENTS_RAW_LOG VALUES(39,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.goHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(39,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=45
INSERT INTO AGENTS_RAW_LOG VALUES(45,9,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.resourceEnd','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=61
INSERT INTO AGENTS_RAW_LOG VALUES(61,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitOut','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(61,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=69
INSERT INTO AGENTS_RAW_LOG VALUES(69,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitWrapUpEnter','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(69,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=73
INSERT INTO AGENTS_RAW_LOG VALUES(73,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.moveToHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(73,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=80
INSERT INTO AGENTS_RAW_LOG VALUES(80,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.goHome','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(80,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=86
INSERT INTO AGENTS_RAW_LOG VALUES(86,9,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.resourceEnd','2016-07-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=102
INSERT INTO AGENTS_RAW_LOG VALUES(102,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitOut','2016-07-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(102,'conditionIsProbabilistic','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(10,'com.anylogic.engine.Agent')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(109,10,'<Default Population>[0]','2016-07-14 00:00:03.135000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=109
INSERT INTO AGENTS_RAW_LOG VALUES(109,10,'root.<Default Population>[0]','2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(0,109,1,'2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(1,109,6,'2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(2,109,17,'2016-07-14 00:00:03.135000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(109,17,'WORK','2016-07-14 00:00:03.135000','2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(3,109,23,'2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(4,109,NULL,'2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(109,'2016-07-14 00:00:03.923000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(110,10,'<Default Population>[0]','2016-07-14 00:00:12.049000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=110
INSERT INTO AGENTS_RAW_LOG VALUES(110,10,'root.<Default Population>[0]','2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(5,110,1,'2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(6,110,6,'2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(7,110,17,'2016-07-14 00:00:12.049000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(110,17,'WORK','2016-07-14 00:00:12.049000','2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(8,110,23,'2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(9,110,NULL,'2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(110,'2016-07-14 00:00:13.261000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(111,10,'<Default Population>[0]','2016-07-14 00:00:23.053000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=111
INSERT INTO AGENTS_RAW_LOG VALUES(111,10,'root.<Default Population>[0]','2016-07-14 00:00:23.053000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(10,111,1,'2016-07-14 00:00:23.053000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(11,111,6,'2016-07-14 00:00:23.053000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(12,111,17,'2016-07-14 00:00:23.053000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(111,17,'WORK','2016-07-14 00:00:23.053000','2016-07-14 00:00:24.260000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(13,111,23,'2016-07-14 00:00:24.260000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(14,111,NULL,'2016-07-14 00:00:24.260000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(111,'2016-07-14 00:00:24.260000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(112,10,'<Default Population>[0]','2016-07-14 00:01:14.020000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=112
INSERT INTO AGENTS_RAW_LOG VALUES(112,10,'root.<Default Population>[0]','2016-07-14 00:01:14.020000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(15,112,1,'2016-07-14 00:01:14.020000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(16,112,6,'2016-07-14 00:01:14.020000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(17,112,17,'2016-07-14 00:01:14.020000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(113,10,'<Default Population>[1]','2016-07-14 00:01:14.640000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=113
INSERT INTO AGENTS_RAW_LOG VALUES(113,10,'root.<Default Population>[1]','2016-07-14 00:01:14.640000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(18,113,1,'2016-07-14 00:01:14.640000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(19,113,6,'2016-07-14 00:01:14.640000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(112,17,'WORK','2016-07-14 00:01:14.020000','2016-07-14 00:01:15.207000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(113,6,'WAIT','2016-07-14 00:01:14.640000','2016-07-14 00:01:15.207000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(20,113,17,'2016-07-14 00:01:15.207000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(21,112,23,'2016-07-14 00:01:15.207000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(22,112,NULL,'2016-07-14 00:01:15.207000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(112,'2016-07-14 00:01:15.207000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(114,10,'<Default Population>[1]','2016-07-14 00:01:15.290000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=114
INSERT INTO AGENTS_RAW_LOG VALUES(114,10,'root.<Default Population>[1]','2016-07-14 00:01:15.290000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(23,114,1,'2016-07-14 00:01:15.290000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(24,114,6,'2016-07-14 00:01:15.290000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(113,17,'WORK','2016-07-14 00:01:15.207000','2016-07-14 00:01:16.106000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(114,6,'WAIT','2016-07-14 00:01:15.290000','2016-07-14 00:01:16.106000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(25,114,17,'2016-07-14 00:01:16.106000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(26,113,23,'2016-07-14 00:01:16.106000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(27,113,NULL,'2016-07-14 00:01:16.106000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(113,'2016-07-14 00:01:16.106000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(114,17,'WORK','2016-07-14 00:01:16.106000','2016-07-14 00:01:16.949000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(28,114,23,'2016-07-14 00:01:16.949000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(29,114,NULL,'2016-07-14 00:01:16.949000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(114,'2016-07-14 00:01:16.949000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(115,10,'<Default Population>[0]','2016-07-14 00:01:25.859000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=115
INSERT INTO AGENTS_RAW_LOG VALUES(115,10,'root.<Default Population>[0]','2016-07-14 00:01:25.859000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(30,115,1,'2016-07-14 00:01:25.859000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(31,115,6,'2016-07-14 00:01:25.859000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(32,115,17,'2016-07-14 00:01:25.859000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(115,17,'WORK','2016-07-14 00:01:25.859000','2016-07-14 00:01:26.575000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(33,115,23,'2016-07-14 00:01:26.575000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(34,115,NULL,'2016-07-14 00:01:26.575000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(115,'2016-07-14 00:01:26.575000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(116,10,'<Default Population>[0]','2016-07-14 00:01:32.662000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=116
INSERT INTO AGENTS_RAW_LOG VALUES(116,10,'root.<Default Population>[0]','2016-07-14 00:01:32.662000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(35,116,1,'2016-07-14 00:01:32.662000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(36,116,6,'2016-07-14 00:01:32.662000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(37,116,17,'2016-07-14 00:01:32.662000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(116,17,'WORK','2016-07-14 00:01:32.662000','2016-07-14 00:01:33.676000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(38,116,23,'2016-07-14 00:01:33.676000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(39,116,NULL,'2016-07-14 00:01:33.676000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(116,'2016-07-14 00:01:33.676000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(117,10,'<Default Population>[0]','2016-07-14 00:01:35.269000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=117
INSERT INTO AGENTS_RAW_LOG VALUES(117,10,'root.<Default Population>[0]','2016-07-14 00:01:35.269000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(40,117,1,'2016-07-14 00:01:35.269000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(41,117,6,'2016-07-14 00:01:35.269000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(42,117,17,'2016-07-14 00:01:35.269000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(117,17,'WORK','2016-07-14 00:01:35.269000','2016-07-14 00:01:36.157000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(43,117,23,'2016-07-14 00:01:36.157000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(44,117,NULL,'2016-07-14 00:01:36.157000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(117,'2016-07-14 00:01:36.157000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(118,10,'<Default Population>[0]','2016-07-14 00:01:53.800000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=118
INSERT INTO AGENTS_RAW_LOG VALUES(118,10,'root.<Default Population>[0]','2016-07-14 00:01:53.800000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(45,118,1,'2016-07-14 00:01:53.800000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(46,118,6,'2016-07-14 00:01:53.800000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(47,118,17,'2016-07-14 00:01:53.800000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(118,17,'WORK','2016-07-14 00:01:53.800000','2016-07-14 00:01:54.829000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(48,118,23,'2016-07-14 00:01:54.829000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(49,118,NULL,'2016-07-14 00:01:54.829000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(118,'2016-07-14 00:01:54.829000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(119,10,'<Default Population>[0]','2016-07-14 00:02:13.478000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=119
INSERT INTO AGENTS_RAW_LOG VALUES(119,10,'root.<Default Population>[0]','2016-07-14 00:02:13.478000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(50,119,1,'2016-07-14 00:02:13.478000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(51,119,6,'2016-07-14 00:02:13.478000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(52,119,17,'2016-07-14 00:02:13.478000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(119,17,'WORK','2016-07-14 00:02:13.478000','2016-07-14 00:02:14.023000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(53,119,23,'2016-07-14 00:02:14.023000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(54,119,NULL,'2016-07-14 00:02:14.023000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(119,'2016-07-14 00:02:14.023000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(120,10,'<Default Population>[0]','2016-07-14 00:02:15.644000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=120
INSERT INTO AGENTS_RAW_LOG VALUES(120,10,'root.<Default Population>[0]','2016-07-14 00:02:15.644000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(55,120,1,'2016-07-14 00:02:15.644000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(56,120,6,'2016-07-14 00:02:15.644000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(57,120,17,'2016-07-14 00:02:15.644000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(120,17,'WORK','2016-07-14 00:02:15.644000','2016-07-14 00:02:16.696000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(58,120,23,'2016-07-14 00:02:16.696000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(59,120,NULL,'2016-07-14 00:02:16.696000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(120,'2016-07-14 00:02:16.696000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(121,10,'<Default Population>[0]','2016-07-14 00:02:22.123000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=121
INSERT INTO AGENTS_RAW_LOG VALUES(121,10,'root.<Default Population>[0]','2016-07-14 00:02:22.123000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(60,121,1,'2016-07-14 00:02:22.123000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(61,121,6,'2016-07-14 00:02:22.123000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(62,121,17,'2016-07-14 00:02:22.123000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(121,17,'WORK','2016-07-14 00:02:22.123000','2016-07-14 00:02:23.062000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(63,121,23,'2016-07-14 00:02:23.062000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(64,121,NULL,'2016-07-14 00:02:23.062000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(121,'2016-07-14 00:02:23.062000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(122,10,'<Default Population>[0]','2016-07-14 00:02:41.641000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=122
INSERT INTO AGENTS_RAW_LOG VALUES(122,10,'root.<Default Population>[0]','2016-07-14 00:02:41.641000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(65,122,1,'2016-07-14 00:02:41.641000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(66,122,6,'2016-07-14 00:02:41.641000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(67,122,17,'2016-07-14 00:02:41.641000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(122,17,'WORK','2016-07-14 00:02:41.641000','2016-07-14 00:02:42.621000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(68,122,23,'2016-07-14 00:02:42.621000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(69,122,NULL,'2016-07-14 00:02:42.621000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(122,'2016-07-14 00:02:42.621000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(123,10,'<Default Population>[0]','2016-07-14 00:02:47.719000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=123
INSERT INTO AGENTS_RAW_LOG VALUES(123,10,'root.<Default Population>[0]','2016-07-14 00:02:47.719000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(70,123,1,'2016-07-14 00:02:47.719000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(71,123,6,'2016-07-14 00:02:47.719000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(72,123,17,'2016-07-14 00:02:47.719000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(123,17,'WORK','2016-07-14 00:02:47.719000','2016-07-14 00:02:48.718000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(73,123,23,'2016-07-14 00:02:48.718000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(74,123,NULL,'2016-07-14 00:02:48.718000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(123,'2016-07-14 00:02:48.718000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(124,10,'<Default Population>[0]','2016-07-14 00:03:03.571000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=124
INSERT INTO AGENTS_RAW_LOG VALUES(124,10,'root.<Default Population>[0]','2016-07-14 00:03:03.571000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(75,124,1,'2016-07-14 00:03:03.571000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(76,124,6,'2016-07-14 00:03:03.571000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(77,124,17,'2016-07-14 00:03:03.571000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(124,17,'WORK','2016-07-14 00:03:03.571000','2016-07-14 00:03:04.136000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(78,124,23,'2016-07-14 00:03:04.136000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(79,124,NULL,'2016-07-14 00:03:04.136000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(124,'2016-07-14 00:03:04.136000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(125,10,'<Default Population>[0]','2016-07-14 00:03:20.460000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=125
INSERT INTO AGENTS_RAW_LOG VALUES(125,10,'root.<Default Population>[0]','2016-07-14 00:03:20.460000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(80,125,1,'2016-07-14 00:03:20.460000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(81,125,6,'2016-07-14 00:03:20.460000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(82,125,17,'2016-07-14 00:03:20.460000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(125,17,'WORK','2016-07-14 00:03:20.460000','2016-07-14 00:03:21.227000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(83,125,23,'2016-07-14 00:03:21.227000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(84,125,NULL,'2016-07-14 00:03:21.227000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(125,'2016-07-14 00:03:21.227000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(126,10,'<Default Population>[0]','2016-07-14 00:03:38.721000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=126
INSERT INTO AGENTS_RAW_LOG VALUES(126,10,'root.<Default Population>[0]','2016-07-14 00:03:38.721000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(85,126,1,'2016-07-14 00:03:38.721000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(86,126,6,'2016-07-14 00:03:38.721000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(87,126,17,'2016-07-14 00:03:38.721000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(126,17,'WORK','2016-07-14 00:03:38.721000','2016-07-14 00:03:39.942000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(88,126,23,'2016-07-14 00:03:39.942000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(89,126,NULL,'2016-07-14 00:03:39.942000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(126,'2016-07-14 00:03:39.942000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(127,10,'<Default Population>[0]','2016-07-14 00:03:44.876000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=127
INSERT INTO AGENTS_RAW_LOG VALUES(127,10,'root.<Default Population>[0]','2016-07-14 00:03:44.876000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(90,127,1,'2016-07-14 00:03:44.876000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(91,127,6,'2016-07-14 00:03:44.876000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(92,127,17,'2016-07-14 00:03:44.876000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(127,17,'WORK','2016-07-14 00:03:44.876000','2016-07-14 00:03:45.773000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(93,127,23,'2016-07-14 00:03:45.773000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(94,127,NULL,'2016-07-14 00:03:45.773000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(127,'2016-07-14 00:03:45.773000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(128,10,'<Default Population>[0]','2016-07-14 00:03:58.923000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=128
INSERT INTO AGENTS_RAW_LOG VALUES(128,10,'root.<Default Population>[0]','2016-07-14 00:03:58.923000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(95,128,1,'2016-07-14 00:03:58.923000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(96,128,6,'2016-07-14 00:03:58.923000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(97,128,17,'2016-07-14 00:03:58.923000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(128,17,'WORK','2016-07-14 00:03:58.923000','2016-07-14 00:03:59.839000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(98,128,23,'2016-07-14 00:03:59.839000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(99,128,NULL,'2016-07-14 00:03:59.839000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(128,'2016-07-14 00:03:59.839000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(129,10,'<Default Population>[0]','2016-07-14 00:04:14.174000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=129
INSERT INTO AGENTS_RAW_LOG VALUES(129,10,'root.<Default Population>[0]','2016-07-14 00:04:14.174000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(100,129,1,'2016-07-14 00:04:14.174000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(101,129,6,'2016-07-14 00:04:14.174000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(102,129,17,'2016-07-14 00:04:14.174000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(129,17,'WORK','2016-07-14 00:04:14.174000','2016-07-14 00:04:15.312000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(103,129,23,'2016-07-14 00:04:15.312000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(104,129,NULL,'2016-07-14 00:04:15.312000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(129,'2016-07-14 00:04:15.312000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(130,10,'<Default Population>[0]','2016-07-14 00:04:28.735000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=130
INSERT INTO AGENTS_RAW_LOG VALUES(130,10,'root.<Default Population>[0]','2016-07-14 00:04:28.735000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(105,130,1,'2016-07-14 00:04:28.735000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(106,130,6,'2016-07-14 00:04:28.735000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(107,130,17,'2016-07-14 00:04:28.735000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(130,17,'WORK','2016-07-14 00:04:28.735000','2016-07-14 00:04:29.721000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(108,130,23,'2016-07-14 00:04:29.721000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(109,130,NULL,'2016-07-14 00:04:29.721000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(130,'2016-07-14 00:04:29.721000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(131,10,'<Default Population>[0]','2016-07-14 00:05:01.351000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=131
INSERT INTO AGENTS_RAW_LOG VALUES(131,10,'root.<Default Population>[0]','2016-07-14 00:05:01.351000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(110,131,1,'2016-07-14 00:05:01.351000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(111,131,6,'2016-07-14 00:05:01.351000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(112,131,17,'2016-07-14 00:05:01.351000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(131,17,'WORK','2016-07-14 00:05:01.351000','2016-07-14 00:05:02.070000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(113,131,23,'2016-07-14 00:05:02.070000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(114,131,NULL,'2016-07-14 00:05:02.070000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(131,'2016-07-14 00:05:02.070000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(132,10,'<Default Population>[0]','2016-07-14 00:05:05.579000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=132
INSERT INTO AGENTS_RAW_LOG VALUES(132,10,'root.<Default Population>[0]','2016-07-14 00:05:05.579000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(115,132,1,'2016-07-14 00:05:05.579000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(116,132,6,'2016-07-14 00:05:05.579000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(117,132,17,'2016-07-14 00:05:05.579000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(132,17,'WORK','2016-07-14 00:05:05.579000','2016-07-14 00:05:06.818000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(118,132,23,'2016-07-14 00:05:06.818000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(119,132,NULL,'2016-07-14 00:05:06.818000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(132,'2016-07-14 00:05:06.818000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(133,10,'<Default Population>[0]','2016-07-14 00:05:09.849000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=133
INSERT INTO AGENTS_RAW_LOG VALUES(133,10,'root.<Default Population>[0]','2016-07-14 00:05:09.849000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(120,133,1,'2016-07-14 00:05:09.849000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(121,133,6,'2016-07-14 00:05:09.849000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(122,133,17,'2016-07-14 00:05:09.849000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(133,17,'WORK','2016-07-14 00:05:09.849000','2016-07-14 00:05:10.736000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(123,133,23,'2016-07-14 00:05:10.736000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(124,133,NULL,'2016-07-14 00:05:10.736000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(133,'2016-07-14 00:05:10.736000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(134,10,'<Default Population>[0]','2016-07-14 00:05:25.612000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=134
INSERT INTO AGENTS_RAW_LOG VALUES(134,10,'root.<Default Population>[0]','2016-07-14 00:05:25.612000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(125,134,1,'2016-07-14 00:05:25.612000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(126,134,6,'2016-07-14 00:05:25.612000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(127,134,17,'2016-07-14 00:05:25.612000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(134,17,'WORK','2016-07-14 00:05:25.612000','2016-07-14 00:05:26.477000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(128,134,23,'2016-07-14 00:05:26.477000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(129,134,NULL,'2016-07-14 00:05:26.477000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(134,'2016-07-14 00:05:26.477000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(135,10,'<Default Population>[0]','2016-07-14 00:05:33.305000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=135
INSERT INTO AGENTS_RAW_LOG VALUES(135,10,'root.<Default Population>[0]','2016-07-14 00:05:33.305000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(130,135,1,'2016-07-14 00:05:33.305000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(131,135,6,'2016-07-14 00:05:33.305000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(132,135,17,'2016-07-14 00:05:33.305000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(135,17,'WORK','2016-07-14 00:05:33.305000','2016-07-14 00:05:34.254000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(133,135,23,'2016-07-14 00:05:34.254000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(134,135,NULL,'2016-07-14 00:05:34.254000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(135,'2016-07-14 00:05:34.254000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(136,10,'<Default Population>[0]','2016-07-14 00:05:41.442000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=136
INSERT INTO AGENTS_RAW_LOG VALUES(136,10,'root.<Default Population>[0]','2016-07-14 00:05:41.442000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(135,136,1,'2016-07-14 00:05:41.442000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(136,136,6,'2016-07-14 00:05:41.442000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(137,136,17,'2016-07-14 00:05:41.442000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(137,10,'<Default Population>[1]','2016-07-14 00:05:41.452000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=137
INSERT INTO AGENTS_RAW_LOG VALUES(137,10,'root.<Default Population>[1]','2016-07-14 00:05:41.452000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(138,137,1,'2016-07-14 00:05:41.452000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(139,137,6,'2016-07-14 00:05:41.452000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(138,10,'<Default Population>[2]','2016-07-14 00:05:42.400000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=138
INSERT INTO AGENTS_RAW_LOG VALUES(138,10,'root.<Default Population>[2]','2016-07-14 00:05:42.400000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(140,138,1,'2016-07-14 00:05:42.400000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(141,138,6,'2016-07-14 00:05:42.400000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(136,17,'WORK','2016-07-14 00:05:41.442000','2016-07-14 00:05:42.444000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(137,6,'WAIT','2016-07-14 00:05:41.452000','2016-07-14 00:05:42.444000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(142,137,17,'2016-07-14 00:05:42.444000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(143,136,23,'2016-07-14 00:05:42.444000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(144,136,NULL,'2016-07-14 00:05:42.444000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(136,'2016-07-14 00:05:42.444000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(137,17,'WORK','2016-07-14 00:05:42.444000','2016-07-14 00:05:43.387000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(138,6,'WAIT','2016-07-14 00:05:42.400000','2016-07-14 00:05:43.387000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(145,138,17,'2016-07-14 00:05:43.387000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(146,137,23,'2016-07-14 00:05:43.387000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(147,137,NULL,'2016-07-14 00:05:43.387000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(137,'2016-07-14 00:05:43.387000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(138,17,'WORK','2016-07-14 00:05:43.387000','2016-07-14 00:05:44.302000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(148,138,23,'2016-07-14 00:05:44.302000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(149,138,NULL,'2016-07-14 00:05:44.302000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(138,'2016-07-14 00:05:44.302000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(139,10,'<Default Population>[0]','2016-07-14 00:05:49.179000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=139
INSERT INTO AGENTS_RAW_LOG VALUES(139,10,'root.<Default Population>[0]','2016-07-14 00:05:49.179000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(150,139,1,'2016-07-14 00:05:49.179000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(151,139,6,'2016-07-14 00:05:49.179000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(152,139,17,'2016-07-14 00:05:49.179000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(139,17,'WORK','2016-07-14 00:05:49.179000','2016-07-14 00:05:50.219000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(153,139,23,'2016-07-14 00:05:50.219000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(154,139,NULL,'2016-07-14 00:05:50.219000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(139,'2016-07-14 00:05:50.219000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(140,10,'<Default Population>[0]','2016-07-14 00:06:00.953000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=140
INSERT INTO AGENTS_RAW_LOG VALUES(140,10,'root.<Default Population>[0]','2016-07-14 00:06:00.953000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(155,140,1,'2016-07-14 00:06:00.953000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(156,140,6,'2016-07-14 00:06:00.953000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(157,140,17,'2016-07-14 00:06:00.953000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(141,10,'<Default Population>[1]','2016-07-14 00:06:01.336000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=141
INSERT INTO AGENTS_RAW_LOG VALUES(141,10,'root.<Default Population>[1]','2016-07-14 00:06:01.336000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(158,141,1,'2016-07-14 00:06:01.336000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(159,141,6,'2016-07-14 00:06:01.336000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(140,17,'WORK','2016-07-14 00:06:00.953000','2016-07-14 00:06:01.742000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(141,6,'WAIT','2016-07-14 00:06:01.336000','2016-07-14 00:06:01.742000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(160,141,17,'2016-07-14 00:06:01.742000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(161,140,23,'2016-07-14 00:06:01.742000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(162,140,NULL,'2016-07-14 00:06:01.742000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(140,'2016-07-14 00:06:01.742000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(141,17,'WORK','2016-07-14 00:06:01.742000','2016-07-14 00:06:02.711000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(163,141,23,'2016-07-14 00:06:02.711000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(164,141,NULL,'2016-07-14 00:06:02.711000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(141,'2016-07-14 00:06:02.711000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(142,10,'<Default Population>[0]','2016-07-14 00:06:18.901000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=142
INSERT INTO AGENTS_RAW_LOG VALUES(142,10,'root.<Default Population>[0]','2016-07-14 00:06:18.901000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(165,142,1,'2016-07-14 00:06:18.901000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(166,142,6,'2016-07-14 00:06:18.901000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(167,142,17,'2016-07-14 00:06:18.901000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(142,17,'WORK','2016-07-14 00:06:18.901000','2016-07-14 00:06:19.886000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(168,142,23,'2016-07-14 00:06:19.886000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(169,142,NULL,'2016-07-14 00:06:19.886000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(142,'2016-07-14 00:06:19.886000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(143,10,'<Default Population>[0]','2016-07-14 00:06:24.780000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=143
INSERT INTO AGENTS_RAW_LOG VALUES(143,10,'root.<Default Population>[0]','2016-07-14 00:06:24.780000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(170,143,1,'2016-07-14 00:06:24.780000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(171,143,6,'2016-07-14 00:06:24.780000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(172,143,17,'2016-07-14 00:06:24.780000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(143,17,'WORK','2016-07-14 00:06:24.780000','2016-07-14 00:06:25.811000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(173,143,23,'2016-07-14 00:06:25.811000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(174,143,NULL,'2016-07-14 00:06:25.811000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(143,'2016-07-14 00:06:25.811000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(144,10,'<Default Population>[0]','2016-07-14 00:06:27.148000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=144
INSERT INTO AGENTS_RAW_LOG VALUES(144,10,'root.<Default Population>[0]','2016-07-14 00:06:27.148000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(175,144,1,'2016-07-14 00:06:27.148000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(176,144,6,'2016-07-14 00:06:27.148000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(177,144,17,'2016-07-14 00:06:27.148000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(144,17,'WORK','2016-07-14 00:06:27.148000','2016-07-14 00:06:27.967000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(178,144,23,'2016-07-14 00:06:27.967000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(179,144,NULL,'2016-07-14 00:06:27.967000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(144,'2016-07-14 00:06:27.967000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(145,10,'<Default Population>[0]','2016-07-14 00:06:43.013000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=145
INSERT INTO AGENTS_RAW_LOG VALUES(145,10,'root.<Default Population>[0]','2016-07-14 00:06:43.013000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(180,145,1,'2016-07-14 00:06:43.013000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(181,145,6,'2016-07-14 00:06:43.013000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(182,145,17,'2016-07-14 00:06:43.013000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(145,17,'WORK','2016-07-14 00:06:43.013000','2016-07-14 00:06:43.813000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(183,145,23,'2016-07-14 00:06:43.813000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(184,145,NULL,'2016-07-14 00:06:43.813000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(145,'2016-07-14 00:06:43.813000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(146,10,'<Default Population>[0]','2016-07-14 00:06:45.524000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=146
INSERT INTO AGENTS_RAW_LOG VALUES(146,10,'root.<Default Population>[0]','2016-07-14 00:06:45.524000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(185,146,1,'2016-07-14 00:06:45.524000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(186,146,6,'2016-07-14 00:06:45.524000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(187,146,17,'2016-07-14 00:06:45.524000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(147,10,'<Default Population>[1]','2016-07-14 00:06:45.695000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=147
INSERT INTO AGENTS_RAW_LOG VALUES(147,10,'root.<Default Population>[1]','2016-07-14 00:06:45.695000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(188,147,1,'2016-07-14 00:06:45.695000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(189,147,6,'2016-07-14 00:06:45.695000')
COMMIT
INSERT INTO STATISTICS_RAW_LOG VALUES(6,'statsSize',0.009290809743357649E0,0.09707137028939289E0,0.0E0,2.0E0,0.009445986399308081E0,78)
COMMIT
INSERT INTO STATISTICS_RAW_LOG VALUES(17,'statsUtilization',0.085670955745035E0,0.27987755016572385E0,0.0E0,1.0E0,0.027240523602828155E0,76)
COMMIT
DISCONNECT
/*C3*/DISCONNECT
